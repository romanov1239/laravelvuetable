{
  "version": 3,
  "sources": ["../../svg4everybody/dist/svg4everybody.js"],
  "sourcesContent": ["!function(root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function() {\n        return root.svg4everybody = factory();\n    }) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n                svg && src) {\n                    if (polyfill) {\n                        if (!opts.validate || opts.validate(src, svg, use)) {\n                            // remove the <use> element\n                            parent.removeChild(use);\n                            // parse the src and get the url and id\n                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                            // if the link is external\n                            if (url.length) {\n                                // get the cached xhr request\n                                var xhr = requests[url];\n                                // ensure the xhr request exists\n                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                xhr._embeds.push({\n                                    parent: parent,\n                                    svg: svg,\n                                    id: id\n                                }), // prepare the xhr ready state change event\n                                loadreadystatechange(xhr);\n                            } else {\n                                // embed the local id into the svg\n                                embed(parent, svg, document.getElementById(id));\n                            }\n                        } else {\n                            // increase the index when the previous value was not \"valid\"\n                            ++index, ++numberOfSvgUseElementsToBypass;\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});"],
  "mappings": "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",
  "names": []
}
