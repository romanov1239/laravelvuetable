import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/svg4everybody/dist/svg4everybody.js
var require_svg4everybody = __commonJS({
  "node_modules/svg4everybody/dist/svg4everybody.js"(exports, module) {
    !function(root, factory) {
      "function" == typeof define && define.amd ? (
        // AMD. Register as an anonymous module unless amdModuleId is set
        define([], function() {
          return root.svg4everybody = factory();
        })
      ) : "object" == typeof module && module.exports ? (
        // Node. Does not work with strict CommonJS, but
        // only CommonJS-like environments that support module.exports,
        // like Node.
        module.exports = factory()
      ) : root.svg4everybody = factory();
    }(exports, function() {
      function embed(parent, svg, target) {
        if (target) {
          var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute("viewBox") && target.getAttribute("viewBox");
          viewBox && svg.setAttribute("viewBox", viewBox);
          for (var clone = target.cloneNode(true); clone.childNodes.length; ) {
            fragment.appendChild(clone.firstChild);
          }
          parent.appendChild(fragment);
        }
      }
      function loadreadystatechange(xhr) {
        xhr.onreadystatechange = function() {
          if (4 === xhr.readyState) {
            var cachedDocument = xhr._cachedDocument;
            cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(""), cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item
            xhr._embeds.splice(0).map(function(item) {
              var target = xhr._cachedTarget[item.id];
              target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), // embed the target into the svg
              embed(item.parent, item.svg, target);
            });
          }
        }, // test the ready state change immediately
        xhr.onreadystatechange();
      }
      function svg4everybody(rawopts) {
        function oninterval() {
          for (var index = 0; index < uses.length; ) {
            var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute("xlink:href") || use.getAttribute("href");
            if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), svg && src) {
              if (polyfill) {
                if (!opts.validate || opts.validate(src, svg, use)) {
                  parent.removeChild(use);
                  var srcSplit = src.split("#"), url = srcSplit.shift(), id = srcSplit.join("#");
                  if (url.length) {
                    var xhr = requests[url];
                    xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open("GET", url), xhr.send(), xhr._embeds = []), // add the svg and id as an item to the xhr embeds list
                    xhr._embeds.push({
                      parent,
                      svg,
                      id
                    }), // prepare the xhr ready state change event
                    loadreadystatechange(xhr);
                  } else {
                    embed(parent, svg, document.getElementById(id));
                  }
                } else {
                  ++index, ++numberOfSvgUseElementsToBypass;
                }
              }
            } else {
              ++index;
            }
          }
          (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);
        }
        var polyfill, opts = Object(rawopts), newerIEUA = /\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/, webkitUA = /\bAppleWebKit\/(\d+)\b/, olderEdgeUA = /\bEdge\/12\.(\d+)\b/, edgeUA = /\bEdge\/.(\d+)\b/, inIframe = window.top !== window.self;
        polyfill = "polyfill" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;
        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName("use"), numberOfSvgUseElementsToBypass = 0;
        polyfill && oninterval();
      }
      function getSVGAncestor(node) {
        for (var svg = node; "svg" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {
        }
        return svg;
      }
      return svg4everybody;
    });
  }
});
export default require_svg4everybody();
/*! Bundled license information:

svg4everybody/dist/svg4everybody.js:
  (*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody *)
*/
//# sourceMappingURL=svg4everybody.js.map
